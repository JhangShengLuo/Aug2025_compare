# docker-compose.yml
# This file sets up four services:
# 1. postgres: A standard row-oriented PostgreSQL database.
# 2. hydra: A columnar database, which is a fork of Postgres.
# 3. jupyter: A Jupyter notebook for data analysis and visualization.
# 4. pgadmin: A web-based UI for managing PostgreSQL and Hydra databases.

version: '3.8'

services:
  # PostgreSQL (Row-Oriented) Service
  postgres:
    image: postgres:latest
    container_name: postgres_row_db
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data_generation:/docker-entrypoint-initdb.d # Mount data generation scripts
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db_network

  # Hydra (Columnar) Service
  hydra:
    image: hydradatabase/hydra:latest
    container_name: hydra_columnar_db
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hydra_db
    ports:
      - "5433:5432" # Map to a different host port to avoid conflict
    volumes:
      - hydra_data:/var/lib/postgresql/data
      - ./data_generation:/docker-entrypoint-initdb.d # Also mount scripts here
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d hydra_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db_network

  # Jupyter Notebook for Analysis and Visualization
  jupyter:
    image: jupyter/scipy-notebook:latest
    container_name: data_analyzer
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - db_network

  # pgAdmin Web UI Service
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_ui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: student@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - db_network
    depends_on:
      postgres:
        condition: service_healthy
      hydra:
        condition: service_healthy

networks:
  db_network:
    driver: bridge

volumes:
  postgres_data:
  hydra_data:
  pgadmin_data:
